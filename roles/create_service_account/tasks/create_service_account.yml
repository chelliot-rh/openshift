- name: Create ServiceAccount
  kubernetes.core.k8s:
    namespace: "{{ service_account_namespace }}"
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "{{ service_account_name }}"

- name: Bind ServiceAccount to Role
  kubernetes.core.k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: "{{ binding_name }}"
      subjects:
        - kind: ServiceAccount
          name: "{{ service_account_name }}"
          namespace: "{{ service_account_namespace }}"
      roleRef:
        kind: ClusterRole
        name: "{{ role_ref }}"
        apiGroup: rbac.authorization.k8s.io

- name: Create manually linked token Secret for ServiceAccount
  kubernetes.core.k8s:
    namespace: "{{ service_account_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ service_account_name }}-token"
        annotations:
          kubernetes.io/service-account.name: "{{ service_account_name }}"
      type: kubernetes.io/service-account-token

- name: Wait for token to be populated in the secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ service_account_namespace }}"
  register: sa_secrets
  until: >-
    sa_secrets.resources
    | selectattr('type', 'equalto', 'kubernetes.io/service-account-token')
    | selectattr('metadata.annotations["kubernetes.io/service-account.name"]', 'equalto', service_account_name)
    | list
    | length > 0
  retries: 10
  delay: 2

- name: Set bearer token fact
  ansible.builtin.set_fact:
    prometheus_bearer_token: >-
      {{
        sa_secrets.resources
        | selectattr('type', 'equalto', 'kubernetes.io/service-account-token')
        | selectattr('metadata.annotations["kubernetes.io/service-account.name"]', 'equalto', service_account_name)
        | map(attribute='data.token')
        | map('b64decode')
        | first
      }}
